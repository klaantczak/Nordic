package plugins

import (
	"nordic32/plugins/loadflow"
	"testing"
)

func Test_Network1(t *testing.T) {
	network := loadflow.ParseNetwork("{\"nodes\":[{\"id\":0,\"capacity\":0,\"power\":-200,\"type\":\"consumer\"},{\"id\":1,\"capacity\":500,\"power\":500,\"type\":\"producer\"},{\"id\":2,\"capacity\":500,\"power\":500,\"type\":\"producer\"},{\"id\":3,\"capacity\":700,\"power\":700,\"type\":\"producer\"},{\"id\":4,\"capacity\":600,\"power\":600,\"type\":\"producer\"},{\"id\":5,\"capacity\":0,\"power\":-30,\"type\":\"consumer\"},{\"id\":6,\"capacity\":0,\"power\":-600,\"type\":\"consumer\"},{\"id\":7,\"capacity\":100,\"power\":100,\"type\":\"producer\"},{\"id\":8,\"capacity\":0,\"power\":-30,\"type\":\"consumer\"},{\"id\":9,\"capacity\":0,\"power\":-800,\"type\":\"consumer\"},{\"id\":10,\"capacity\":0,\"power\":-700,\"type\":\"consumer\"},{\"id\":11,\"capacity\":0,\"power\":-100,\"type\":\"consumer\"},{\"id\":12,\"capacity\":650,\"power\":650,\"type\":\"producer\"},{\"id\":13,\"capacity\":1000,\"power\":1000,\"type\":\"producer\"},{\"id\":14,\"capacity\":800,\"power\":800,\"type\":\"producer\"},{\"id\":15,\"capacity\":300,\"power\":300,\"type\":\"producer\"},{\"id\":16,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":17,\"capacity\":350,\"power\":350,\"type\":\"producer\"},{\"id\":18,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":19,\"capacity\":0,\"power\":-240,\"type\":\"consumer\"},{\"id\":20,\"capacity\":300,\"power\":300,\"type\":\"producer\"},{\"id\":21,\"capacity\":0,\"power\":-900,\"type\":\"consumer\"},{\"id\":22,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":23,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":24,\"capacity\":0,\"power\":-700,\"type\":\"consumer\"},{\"id\":25,\"capacity\":1100,\"power\":1100,\"type\":\"producer\"},{\"id\":26,\"capacity\":600,\"power\":600,\"type\":\"producer\"},{\"id\":27,\"capacity\":0,\"power\":-500,\"type\":\"consumer\"},{\"id\":28,\"capacity\":400,\"power\":400,\"type\":\"producer\"},{\"id\":29,\"capacity\":610,\"power\":610,\"type\":\"producer\"},{\"id\":30,\"capacity\":200,\"power\":200,\"type\":\"producer\"},{\"id\":31,\"capacity\":2500,\"power\":2500,\"type\":\"producer\"}],\"links\":[{\"id\":32,\"from\":30,\"to\":13,\"x\":8,\"max\":1200},{\"id\":33,\"from\":30,\"to\":14,\"x\":8,\"max\":1200},{\"id\":34,\"from\":30,\"to\":31,\"x\":4.8,\"max\":1200},{\"id\":35,\"from\":30,\"to\":31,\"x\":4.8,\"max\":1200},{\"id\":36,\"from\":13,\"to\":0,\"x\":1,\"max\":1200},{\"id\":37,\"from\":13,\"to\":15,\"x\":9.6,\"max\":1200},{\"id\":38,\"from\":13,\"to\":16,\"x\":6.4,\"max\":1200},{\"id\":39,\"from\":13,\"to\":14,\"x\":1.6,\"max\":1200},{\"id\":40,\"from\":0,\"to\":2,\"x\":1.69,\"max\":1200},{\"id\":41,\"from\":0,\"to\":2,\"x\":1.69,\"max\":1200},{\"id\":42,\"from\":2,\"to\":3,\"x\":1.18,\"max\":1200},{\"id\":43,\"from\":2,\"to\":3,\"x\":1.18,\"max\":1200},{\"id\":44,\"from\":14,\"to\":1,\"x\":1,\"max\":1200},{\"id\":45,\"from\":14,\"to\":16,\"x\":6.4,\"max\":1200},{\"id\":46,\"from\":1,\"to\":3,\"x\":2.37,\"max\":1200},{\"id\":47,\"from\":1,\"to\":3,\"x\":2.37,\"max\":1200},{\"id\":48,\"from\":15,\"to\":20,\"x\":16,\"max\":1200},{\"id\":49,\"from\":15,\"to\":18,\"x\":6.4,\"max\":1200},{\"id\":50,\"from\":4,\"to\":5,\"x\":5.07,\"max\":1200},{\"id\":51,\"from\":4,\"to\":5,\"x\":5.07,\"max\":1200},{\"id\":52,\"from\":5,\"to\":16,\"x\":1,\"max\":1200},{\"id\":53,\"from\":16,\"to\":17,\"x\":6.4,\"max\":1200},{\"id\":54,\"from\":16,\"to\":17,\"x\":6.4,\"max\":1200},{\"id\":55,\"from\":12,\"to\":11,\"x\":5.81,\"max\":1200},{\"id\":56,\"from\":12,\"to\":11,\"x\":5.81,\"max\":1200},{\"id\":57,\"from\":11,\"to\":17,\"x\":1,\"max\":1200},{\"id\":58,\"from\":17,\"to\":19,\"x\":9.6,\"max\":1200},{\"id\":59,\"from\":17,\"to\":19,\"x\":9.6,\"max\":1200},{\"id\":60,\"from\":17,\"to\":18,\"x\":1.6,\"max\":1200},{\"id\":61,\"from\":18,\"to\":20,\"x\":16,\"max\":1200},{\"id\":62,\"from\":18,\"to\":22,\"x\":9.6,\"max\":1200},{\"id\":63,\"from\":20,\"to\":22,\"x\":3.2,\"max\":1200},{\"id\":64,\"from\":20,\"to\":21,\"x\":3.2,\"max\":1200},{\"id\":65,\"from\":19,\"to\":22,\"x\":4.8,\"max\":1200},{\"id\":66,\"from\":19,\"to\":27,\"x\":9.6,\"max\":1200},{\"id\":67,\"from\":22,\"to\":9,\"x\":1,\"max\":1200},{\"id\":68,\"from\":22,\"to\":9,\"x\":1,\"max\":1200},{\"id\":69,\"from\":22,\"to\":23,\"x\":3.2,\"max\":1200},{\"id\":70,\"from\":22,\"to\":23,\"x\":3.2,\"max\":1200},{\"id\":71,\"from\":22,\"to\":21,\"x\":1.6,\"max\":1200},{\"id\":72,\"from\":21,\"to\":25,\"x\":3.2,\"max\":1200},{\"id\":73,\"from\":21,\"to\":24,\"x\":1.6,\"max\":1200},{\"id\":74,\"from\":24,\"to\":25,\"x\":1.6,\"max\":1200},{\"id\":75,\"from\":27,\"to\":28,\"x\":1,\"max\":1200},{\"id\":76,\"from\":8,\"to\":6,\"x\":1.69,\"max\":1200},{\"id\":77,\"from\":8,\"to\":6,\"x\":1.69,\"max\":1200},{\"id\":78,\"from\":8,\"to\":9,\"x\":1.69,\"max\":1200},{\"id\":79,\"from\":8,\"to\":9,\"x\":1.69,\"max\":1200},{\"id\":80,\"from\":9,\"to\":7,\"x\":6.42,\"max\":1200},{\"id\":81,\"from\":9,\"to\":7,\"x\":6.42,\"max\":1200},{\"id\":82,\"from\":7,\"to\":10,\"x\":8.45,\"max\":1200},{\"id\":83,\"from\":6,\"to\":10,\"x\":2.53,\"max\":1200},{\"id\":84,\"from\":6,\"to\":10,\"x\":2.53,\"max\":1200},{\"id\":85,\"from\":10,\"to\":23,\"x\":1,\"max\":1200},{\"id\":86,\"from\":10,\"to\":23,\"x\":1,\"max\":1200},{\"id\":87,\"from\":28,\"to\":29,\"x\":4.8,\"max\":1200},{\"id\":88,\"from\":28,\"to\":29,\"x\":4.8,\"max\":1200},{\"id\":89,\"from\":28,\"to\":23,\"x\":17.6,\"max\":1200},{\"id\":90,\"from\":23,\"to\":26,\"x\":6.4,\"max\":1200},{\"id\":91,\"from\":23,\"to\":26,\"x\":6.4,\"max\":1200}]}")
	states := loadflow.ParseFlags("[true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]")
	expected := loadflow.ParseInts("[1,1,1,1,1,1,-3,-3,-3,-3,-3,-3,-3,1,1,-3,1,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,-3,-3,1,1,1,-1,-1,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3]")

	result := loadflow.LoadFlow2(network, states)

	for i, v := range result.States {
		if expected[i] != v {
			t.Errorf("Unexpected state")
		}
	}
}

func Test_Network2(t *testing.T) {
	network := loadflow.ParseNetwork("{\"nodes\":[{\"id\":0,\"capacity\":0,\"power\":-200,\"type\":\"consumer\"},{\"id\":1,\"capacity\":500,\"power\":500,\"type\":\"producer\"},{\"id\":2,\"capacity\":500,\"power\":500,\"type\":\"producer\"},{\"id\":3,\"capacity\":700,\"power\":700,\"type\":\"producer\"},{\"id\":4,\"capacity\":600,\"power\":600,\"type\":\"producer\"},{\"id\":5,\"capacity\":0,\"power\":-30,\"type\":\"consumer\"},{\"id\":6,\"capacity\":0,\"power\":-600,\"type\":\"consumer\"},{\"id\":7,\"capacity\":100,\"power\":100,\"type\":\"producer\"},{\"id\":8,\"capacity\":0,\"power\":-30,\"type\":\"consumer\"},{\"id\":9,\"capacity\":0,\"power\":-800,\"type\":\"consumer\"},{\"id\":10,\"capacity\":0,\"power\":-700,\"type\":\"consumer\"},{\"id\":11,\"capacity\":0,\"power\":-100,\"type\":\"consumer\"},{\"id\":12,\"capacity\":650,\"power\":650,\"type\":\"producer\"},{\"id\":13,\"capacity\":1000,\"power\":1000,\"type\":\"producer\"},{\"id\":14,\"capacity\":800,\"power\":800,\"type\":\"producer\"},{\"id\":15,\"capacity\":300,\"power\":300,\"type\":\"producer\"},{\"id\":16,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":17,\"capacity\":350,\"power\":350,\"type\":\"producer\"},{\"id\":18,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":19,\"capacity\":0,\"power\":-240,\"type\":\"consumer\"},{\"id\":20,\"capacity\":300,\"power\":300,\"type\":\"producer\"},{\"id\":21,\"capacity\":0,\"power\":-900,\"type\":\"consumer\"},{\"id\":22,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":23,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":24,\"capacity\":0,\"power\":-700,\"type\":\"consumer\"},{\"id\":25,\"capacity\":1100,\"power\":1100,\"type\":\"producer\"},{\"id\":26,\"capacity\":600,\"power\":600,\"type\":\"producer\"},{\"id\":27,\"capacity\":0,\"power\":-500,\"type\":\"consumer\"},{\"id\":28,\"capacity\":400,\"power\":400,\"type\":\"producer\"},{\"id\":29,\"capacity\":610,\"power\":610,\"type\":\"producer\"},{\"id\":30,\"capacity\":200,\"power\":200,\"type\":\"producer\"},{\"id\":31,\"capacity\":2500,\"power\":2500,\"type\":\"producer\"}],\"links\":[{\"id\":32,\"from\":30,\"to\":13,\"x\":8,\"max\":1200},{\"id\":33,\"from\":30,\"to\":14,\"x\":8,\"max\":1200},{\"id\":34,\"from\":30,\"to\":31,\"x\":4.8,\"max\":1200},{\"id\":35,\"from\":30,\"to\":31,\"x\":4.8,\"max\":1200},{\"id\":36,\"from\":13,\"to\":0,\"x\":1,\"max\":1200},{\"id\":37,\"from\":13,\"to\":15,\"x\":9.6,\"max\":1200},{\"id\":38,\"from\":13,\"to\":16,\"x\":6.4,\"max\":1200},{\"id\":39,\"from\":13,\"to\":14,\"x\":1.6,\"max\":1200},{\"id\":40,\"from\":0,\"to\":2,\"x\":1.69,\"max\":1200},{\"id\":41,\"from\":0,\"to\":2,\"x\":1.69,\"max\":1200},{\"id\":42,\"from\":2,\"to\":3,\"x\":1.18,\"max\":1200},{\"id\":43,\"from\":2,\"to\":3,\"x\":1.18,\"max\":1200},{\"id\":44,\"from\":14,\"to\":1,\"x\":1,\"max\":1200},{\"id\":45,\"from\":14,\"to\":16,\"x\":6.4,\"max\":1200},{\"id\":46,\"from\":1,\"to\":3,\"x\":2.37,\"max\":1200},{\"id\":47,\"from\":1,\"to\":3,\"x\":2.37,\"max\":1200},{\"id\":48,\"from\":15,\"to\":20,\"x\":16,\"max\":1200},{\"id\":49,\"from\":15,\"to\":18,\"x\":6.4,\"max\":1200},{\"id\":50,\"from\":4,\"to\":5,\"x\":5.07,\"max\":1200},{\"id\":51,\"from\":4,\"to\":5,\"x\":5.07,\"max\":1200},{\"id\":52,\"from\":5,\"to\":16,\"x\":1,\"max\":1200},{\"id\":53,\"from\":16,\"to\":17,\"x\":6.4,\"max\":1200},{\"id\":54,\"from\":16,\"to\":17,\"x\":6.4,\"max\":1200},{\"id\":55,\"from\":12,\"to\":11,\"x\":5.81,\"max\":1200},{\"id\":56,\"from\":12,\"to\":11,\"x\":5.81,\"max\":1200},{\"id\":57,\"from\":11,\"to\":17,\"x\":1,\"max\":1200},{\"id\":58,\"from\":17,\"to\":19,\"x\":9.6,\"max\":1200},{\"id\":59,\"from\":17,\"to\":19,\"x\":9.6,\"max\":1200},{\"id\":60,\"from\":17,\"to\":18,\"x\":1.6,\"max\":1200},{\"id\":61,\"from\":18,\"to\":20,\"x\":16,\"max\":1200},{\"id\":62,\"from\":18,\"to\":22,\"x\":9.6,\"max\":1200},{\"id\":63,\"from\":20,\"to\":22,\"x\":3.2,\"max\":1200},{\"id\":64,\"from\":20,\"to\":21,\"x\":3.2,\"max\":1200},{\"id\":65,\"from\":19,\"to\":22,\"x\":4.8,\"max\":1200},{\"id\":66,\"from\":19,\"to\":27,\"x\":9.6,\"max\":1200},{\"id\":67,\"from\":22,\"to\":9,\"x\":1,\"max\":1200},{\"id\":68,\"from\":22,\"to\":9,\"x\":1,\"max\":1200},{\"id\":69,\"from\":22,\"to\":23,\"x\":3.2,\"max\":1200},{\"id\":70,\"from\":22,\"to\":23,\"x\":3.2,\"max\":1200},{\"id\":71,\"from\":22,\"to\":21,\"x\":1.6,\"max\":1200},{\"id\":72,\"from\":21,\"to\":25,\"x\":3.2,\"max\":1200},{\"id\":73,\"from\":21,\"to\":24,\"x\":1.6,\"max\":1200},{\"id\":74,\"from\":24,\"to\":25,\"x\":1.6,\"max\":1200},{\"id\":75,\"from\":27,\"to\":28,\"x\":1,\"max\":1200},{\"id\":76,\"from\":8,\"to\":6,\"x\":1.69,\"max\":1200},{\"id\":77,\"from\":8,\"to\":6,\"x\":1.69,\"max\":1200},{\"id\":78,\"from\":8,\"to\":9,\"x\":1.69,\"max\":1200},{\"id\":79,\"from\":8,\"to\":9,\"x\":1.69,\"max\":1200},{\"id\":80,\"from\":9,\"to\":7,\"x\":6.42,\"max\":1200},{\"id\":81,\"from\":9,\"to\":7,\"x\":6.42,\"max\":1200},{\"id\":82,\"from\":7,\"to\":10,\"x\":8.45,\"max\":1200},{\"id\":83,\"from\":6,\"to\":10,\"x\":2.53,\"max\":1200},{\"id\":84,\"from\":6,\"to\":10,\"x\":2.53,\"max\":1200},{\"id\":85,\"from\":10,\"to\":23,\"x\":1,\"max\":1200},{\"id\":86,\"from\":10,\"to\":23,\"x\":1,\"max\":1200},{\"id\":87,\"from\":28,\"to\":29,\"x\":4.8,\"max\":1200},{\"id\":88,\"from\":28,\"to\":29,\"x\":4.8,\"max\":1200},{\"id\":89,\"from\":28,\"to\":23,\"x\":17.6,\"max\":1200},{\"id\":90,\"from\":23,\"to\":26,\"x\":6.4,\"max\":1200},{\"id\":91,\"from\":23,\"to\":26,\"x\":6.4,\"max\":1200}]}")
	states := loadflow.ParseFlags("[true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]")
	expected := loadflow.ParseInts("[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-4,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]")

	result := loadflow.LoadFlow2(network, states)

	for i, v := range result.States {
		if expected[i] != v {
			t.Errorf("Unexpected state")
		}
	}
}

func Test_Network3(t *testing.T) {
	network := loadflow.ParseNetwork("{\"nodes\":[{\"id\":0,\"capacity\":0,\"power\":-200,\"type\":\"consumer\"},{\"id\":1,\"capacity\":500,\"power\":500,\"type\":\"producer\"},{\"id\":2,\"capacity\":500,\"power\":500,\"type\":\"producer\"},{\"id\":3,\"capacity\":700,\"power\":700,\"type\":\"producer\"},{\"id\":4,\"capacity\":600,\"power\":600,\"type\":\"producer\"},{\"id\":5,\"capacity\":0,\"power\":-30,\"type\":\"consumer\"},{\"id\":6,\"capacity\":0,\"power\":-600,\"type\":\"consumer\"},{\"id\":7,\"capacity\":100,\"power\":100,\"type\":\"producer\"},{\"id\":8,\"capacity\":0,\"power\":-30,\"type\":\"consumer\"},{\"id\":9,\"capacity\":0,\"power\":-800,\"type\":\"consumer\"},{\"id\":10,\"capacity\":0,\"power\":-700,\"type\":\"consumer\"},{\"id\":11,\"capacity\":0,\"power\":-100,\"type\":\"consumer\"},{\"id\":12,\"capacity\":650,\"power\":650,\"type\":\"producer\"},{\"id\":13,\"capacity\":1000,\"power\":1000,\"type\":\"producer\"},{\"id\":14,\"capacity\":800,\"power\":800,\"type\":\"producer\"},{\"id\":15,\"capacity\":300,\"power\":300,\"type\":\"producer\"},{\"id\":16,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":17,\"capacity\":350,\"power\":350,\"type\":\"producer\"},{\"id\":18,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":19,\"capacity\":0,\"power\":-240,\"type\":\"consumer\"},{\"id\":20,\"capacity\":300,\"power\":300,\"type\":\"producer\"},{\"id\":21,\"capacity\":0,\"power\":-900,\"type\":\"consumer\"},{\"id\":22,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":23,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":24,\"capacity\":0,\"power\":-700,\"type\":\"consumer\"},{\"id\":25,\"capacity\":1100,\"power\":1100,\"type\":\"producer\"},{\"id\":26,\"capacity\":600,\"power\":600,\"type\":\"producer\"},{\"id\":27,\"capacity\":0,\"power\":-500,\"type\":\"consumer\"},{\"id\":28,\"capacity\":400,\"power\":400,\"type\":\"producer\"},{\"id\":29,\"capacity\":610,\"power\":610,\"type\":\"producer\"},{\"id\":30,\"capacity\":200,\"power\":200,\"type\":\"producer\"},{\"id\":31,\"capacity\":2500,\"power\":2500,\"type\":\"producer\"}],\"links\":[{\"id\":32,\"from\":30,\"to\":13,\"x\":8,\"max\":1200},{\"id\":33,\"from\":30,\"to\":14,\"x\":8,\"max\":1200},{\"id\":34,\"from\":30,\"to\":31,\"x\":4.8,\"max\":1200},{\"id\":35,\"from\":30,\"to\":31,\"x\":4.8,\"max\":1200},{\"id\":36,\"from\":13,\"to\":0,\"x\":1,\"max\":1200},{\"id\":37,\"from\":13,\"to\":15,\"x\":9.6,\"max\":1200},{\"id\":38,\"from\":13,\"to\":16,\"x\":6.4,\"max\":1200},{\"id\":39,\"from\":13,\"to\":14,\"x\":1.6,\"max\":1200},{\"id\":40,\"from\":0,\"to\":2,\"x\":1.69,\"max\":1200},{\"id\":41,\"from\":0,\"to\":2,\"x\":1.69,\"max\":1200},{\"id\":42,\"from\":2,\"to\":3,\"x\":1.18,\"max\":1200},{\"id\":43,\"from\":2,\"to\":3,\"x\":1.18,\"max\":1200},{\"id\":44,\"from\":14,\"to\":1,\"x\":1,\"max\":1200},{\"id\":45,\"from\":14,\"to\":16,\"x\":6.4,\"max\":1200},{\"id\":46,\"from\":1,\"to\":3,\"x\":2.37,\"max\":1200},{\"id\":47,\"from\":1,\"to\":3,\"x\":2.37,\"max\":1200},{\"id\":48,\"from\":15,\"to\":20,\"x\":16,\"max\":1200},{\"id\":49,\"from\":15,\"to\":18,\"x\":6.4,\"max\":1200},{\"id\":50,\"from\":4,\"to\":5,\"x\":5.07,\"max\":1200},{\"id\":51,\"from\":4,\"to\":5,\"x\":5.07,\"max\":1200},{\"id\":52,\"from\":5,\"to\":16,\"x\":1,\"max\":1200},{\"id\":53,\"from\":16,\"to\":17,\"x\":6.4,\"max\":1200},{\"id\":54,\"from\":16,\"to\":17,\"x\":6.4,\"max\":1200},{\"id\":55,\"from\":12,\"to\":11,\"x\":5.81,\"max\":1200},{\"id\":56,\"from\":12,\"to\":11,\"x\":5.81,\"max\":1200},{\"id\":57,\"from\":11,\"to\":17,\"x\":1,\"max\":1200},{\"id\":58,\"from\":17,\"to\":19,\"x\":9.6,\"max\":1200},{\"id\":59,\"from\":17,\"to\":19,\"x\":9.6,\"max\":1200},{\"id\":60,\"from\":17,\"to\":18,\"x\":1.6,\"max\":1200},{\"id\":61,\"from\":18,\"to\":20,\"x\":16,\"max\":1200},{\"id\":62,\"from\":18,\"to\":22,\"x\":9.6,\"max\":1200},{\"id\":63,\"from\":20,\"to\":22,\"x\":3.2,\"max\":1200},{\"id\":64,\"from\":20,\"to\":21,\"x\":3.2,\"max\":1200},{\"id\":65,\"from\":19,\"to\":22,\"x\":4.8,\"max\":1200},{\"id\":66,\"from\":19,\"to\":27,\"x\":9.6,\"max\":1200},{\"id\":67,\"from\":22,\"to\":9,\"x\":1,\"max\":1200},{\"id\":68,\"from\":22,\"to\":9,\"x\":1,\"max\":1200},{\"id\":69,\"from\":22,\"to\":23,\"x\":3.2,\"max\":1200},{\"id\":70,\"from\":22,\"to\":23,\"x\":3.2,\"max\":1200},{\"id\":71,\"from\":22,\"to\":21,\"x\":1.6,\"max\":1200},{\"id\":72,\"from\":21,\"to\":25,\"x\":3.2,\"max\":1200},{\"id\":73,\"from\":21,\"to\":24,\"x\":1.6,\"max\":1200},{\"id\":74,\"from\":24,\"to\":25,\"x\":1.6,\"max\":1200},{\"id\":75,\"from\":27,\"to\":28,\"x\":1,\"max\":1200},{\"id\":76,\"from\":8,\"to\":6,\"x\":1.69,\"max\":1200},{\"id\":77,\"from\":8,\"to\":6,\"x\":1.69,\"max\":1200},{\"id\":78,\"from\":8,\"to\":9,\"x\":1.69,\"max\":1200},{\"id\":79,\"from\":8,\"to\":9,\"x\":1.69,\"max\":1200},{\"id\":80,\"from\":9,\"to\":7,\"x\":6.42,\"max\":1200},{\"id\":81,\"from\":9,\"to\":7,\"x\":6.42,\"max\":1200},{\"id\":82,\"from\":7,\"to\":10,\"x\":8.45,\"max\":1200},{\"id\":83,\"from\":6,\"to\":10,\"x\":2.53,\"max\":1200},{\"id\":84,\"from\":6,\"to\":10,\"x\":2.53,\"max\":1200},{\"id\":85,\"from\":10,\"to\":23,\"x\":1,\"max\":1200},{\"id\":86,\"from\":10,\"to\":23,\"x\":1,\"max\":1200},{\"id\":87,\"from\":28,\"to\":29,\"x\":4.8,\"max\":1200},{\"id\":88,\"from\":28,\"to\":29,\"x\":4.8,\"max\":1200},{\"id\":89,\"from\":28,\"to\":23,\"x\":17.6,\"max\":1200},{\"id\":90,\"from\":23,\"to\":26,\"x\":6.4,\"max\":1200},{\"id\":91,\"from\":23,\"to\":26,\"x\":6.4,\"max\":1200}]}")
	states := loadflow.ParseFlags("[true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]")
	expected := loadflow.ParseInts("[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-4,-1,1,1,1,1,1,1,-1,1,1,1,-4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]")

	result := loadflow.LoadFlow2(network, states)

	for i, v := range result.States {
		if expected[i] != v {
			t.Errorf("Unexpected state")
		}
	}
}

func Test_Network4(t *testing.T) {
	network := loadflow.ParseNetwork("{\"nodes\":[{\"id\":0,\"capacity\":0,\"power\":-200,\"type\":\"consumer\"},{\"id\":1,\"capacity\":500,\"power\":500,\"type\":\"producer\"},{\"id\":2,\"capacity\":500,\"power\":500,\"type\":\"producer\"},{\"id\":3,\"capacity\":700,\"power\":700,\"type\":\"producer\"},{\"id\":4,\"capacity\":600,\"power\":600,\"type\":\"producer\"},{\"id\":5,\"capacity\":0,\"power\":-30,\"type\":\"consumer\"},{\"id\":6,\"capacity\":0,\"power\":-600,\"type\":\"consumer\"},{\"id\":7,\"capacity\":100,\"power\":100,\"type\":\"producer\"},{\"id\":8,\"capacity\":0,\"power\":-30,\"type\":\"consumer\"},{\"id\":9,\"capacity\":0,\"power\":-800,\"type\":\"consumer\"},{\"id\":10,\"capacity\":0,\"power\":-700,\"type\":\"consumer\"},{\"id\":11,\"capacity\":0,\"power\":-100,\"type\":\"consumer\"},{\"id\":12,\"capacity\":650,\"power\":650,\"type\":\"producer\"},{\"id\":13,\"capacity\":1000,\"power\":1000,\"type\":\"producer\"},{\"id\":14,\"capacity\":800,\"power\":800,\"type\":\"producer\"},{\"id\":15,\"capacity\":300,\"power\":300,\"type\":\"producer\"},{\"id\":16,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":17,\"capacity\":350,\"power\":350,\"type\":\"producer\"},{\"id\":18,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":19,\"capacity\":0,\"power\":-240,\"type\":\"consumer\"},{\"id\":20,\"capacity\":300,\"power\":300,\"type\":\"producer\"},{\"id\":21,\"capacity\":0,\"power\":-900,\"type\":\"consumer\"},{\"id\":22,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":23,\"capacity\":0,\"power\":0,\"type\":\"distributor\"},{\"id\":24,\"capacity\":0,\"power\":-700,\"type\":\"consumer\"},{\"id\":25,\"capacity\":1100,\"power\":1100,\"type\":\"producer\"},{\"id\":26,\"capacity\":600,\"power\":600,\"type\":\"producer\"},{\"id\":27,\"capacity\":0,\"power\":-500,\"type\":\"consumer\"},{\"id\":28,\"capacity\":400,\"power\":400,\"type\":\"producer\"},{\"id\":29,\"capacity\":610,\"power\":610,\"type\":\"producer\"},{\"id\":30,\"capacity\":200,\"power\":200,\"type\":\"producer\"},{\"id\":31,\"capacity\":2500,\"power\":2500,\"type\":\"producer\"}],\"links\":[{\"id\":32,\"from\":30,\"to\":13,\"x\":8,\"max\":1200},{\"id\":33,\"from\":30,\"to\":14,\"x\":8,\"max\":1200},{\"id\":34,\"from\":30,\"to\":31,\"x\":4.8,\"max\":1200},{\"id\":35,\"from\":30,\"to\":31,\"x\":4.8,\"max\":1200},{\"id\":36,\"from\":13,\"to\":0,\"x\":1,\"max\":1200},{\"id\":37,\"from\":13,\"to\":15,\"x\":9.6,\"max\":1200},{\"id\":38,\"from\":13,\"to\":16,\"x\":6.4,\"max\":1200},{\"id\":39,\"from\":13,\"to\":14,\"x\":1.6,\"max\":1200},{\"id\":40,\"from\":0,\"to\":2,\"x\":1.69,\"max\":1200},{\"id\":41,\"from\":0,\"to\":2,\"x\":1.69,\"max\":1200},{\"id\":42,\"from\":2,\"to\":3,\"x\":1.18,\"max\":1200},{\"id\":43,\"from\":2,\"to\":3,\"x\":1.18,\"max\":1200},{\"id\":44,\"from\":14,\"to\":1,\"x\":1,\"max\":1200},{\"id\":45,\"from\":14,\"to\":16,\"x\":6.4,\"max\":1200},{\"id\":46,\"from\":1,\"to\":3,\"x\":2.37,\"max\":1200},{\"id\":47,\"from\":1,\"to\":3,\"x\":2.37,\"max\":1200},{\"id\":48,\"from\":15,\"to\":20,\"x\":16,\"max\":1200},{\"id\":49,\"from\":15,\"to\":18,\"x\":6.4,\"max\":1200},{\"id\":50,\"from\":4,\"to\":5,\"x\":5.07,\"max\":1200},{\"id\":51,\"from\":4,\"to\":5,\"x\":5.07,\"max\":1200},{\"id\":52,\"from\":5,\"to\":16,\"x\":1,\"max\":1200},{\"id\":53,\"from\":16,\"to\":17,\"x\":6.4,\"max\":1200},{\"id\":54,\"from\":16,\"to\":17,\"x\":6.4,\"max\":1200},{\"id\":55,\"from\":12,\"to\":11,\"x\":5.81,\"max\":1200},{\"id\":56,\"from\":12,\"to\":11,\"x\":5.81,\"max\":1200},{\"id\":57,\"from\":11,\"to\":17,\"x\":1,\"max\":1200},{\"id\":58,\"from\":17,\"to\":19,\"x\":9.6,\"max\":1200},{\"id\":59,\"from\":17,\"to\":19,\"x\":9.6,\"max\":1200},{\"id\":60,\"from\":17,\"to\":18,\"x\":1.6,\"max\":1200},{\"id\":61,\"from\":18,\"to\":20,\"x\":16,\"max\":1200},{\"id\":62,\"from\":18,\"to\":22,\"x\":9.6,\"max\":1200},{\"id\":63,\"from\":20,\"to\":22,\"x\":3.2,\"max\":1200},{\"id\":64,\"from\":20,\"to\":21,\"x\":3.2,\"max\":1200},{\"id\":65,\"from\":19,\"to\":22,\"x\":4.8,\"max\":1200},{\"id\":66,\"from\":19,\"to\":27,\"x\":9.6,\"max\":1200},{\"id\":67,\"from\":22,\"to\":9,\"x\":1,\"max\":1200},{\"id\":68,\"from\":22,\"to\":9,\"x\":1,\"max\":1200},{\"id\":69,\"from\":22,\"to\":23,\"x\":3.2,\"max\":1200},{\"id\":70,\"from\":22,\"to\":23,\"x\":3.2,\"max\":1200},{\"id\":71,\"from\":22,\"to\":21,\"x\":1.6,\"max\":1200},{\"id\":72,\"from\":21,\"to\":25,\"x\":3.2,\"max\":1200},{\"id\":73,\"from\":21,\"to\":24,\"x\":1.6,\"max\":1200},{\"id\":74,\"from\":24,\"to\":25,\"x\":1.6,\"max\":1200},{\"id\":75,\"from\":27,\"to\":28,\"x\":1,\"max\":1200},{\"id\":76,\"from\":8,\"to\":6,\"x\":1.69,\"max\":1200},{\"id\":77,\"from\":8,\"to\":6,\"x\":1.69,\"max\":1200},{\"id\":78,\"from\":8,\"to\":9,\"x\":1.69,\"max\":1200},{\"id\":79,\"from\":8,\"to\":9,\"x\":1.69,\"max\":1200},{\"id\":80,\"from\":9,\"to\":7,\"x\":6.42,\"max\":1200},{\"id\":81,\"from\":9,\"to\":7,\"x\":6.42,\"max\":1200},{\"id\":82,\"from\":7,\"to\":10,\"x\":8.45,\"max\":1200},{\"id\":83,\"from\":6,\"to\":10,\"x\":2.53,\"max\":1200},{\"id\":84,\"from\":6,\"to\":10,\"x\":2.53,\"max\":1200},{\"id\":85,\"from\":10,\"to\":23,\"x\":1,\"max\":1200},{\"id\":86,\"from\":10,\"to\":23,\"x\":1,\"max\":1200},{\"id\":87,\"from\":28,\"to\":29,\"x\":4.8,\"max\":1200},{\"id\":88,\"from\":28,\"to\":29,\"x\":4.8,\"max\":1200},{\"id\":89,\"from\":28,\"to\":23,\"x\":17.6,\"max\":1200},{\"id\":90,\"from\":23,\"to\":26,\"x\":6.4,\"max\":1200},{\"id\":91,\"from\":23,\"to\":26,\"x\":6.4,\"max\":1200}]}")
	states := loadflow.ParseFlags("[true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]")
	expectedStates := loadflow.ParseInts("[1,1,1,1,1,1,-3,-3,-3,-3,-3,-3,-3,1,1,-3,1,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,1,1,1,1,1,1,1,-4,1,1,1,1,1,1,1,1,1,1,-3,-4,1,1,1,-1,-1,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3]")
	expectedFlows := loadflow.ParseFloats("[49.293,42.030,-42.279,-42.279,119.117,2681.685,0.313,-36.314,-40.441,-40.441,-31.985,-31.985,23.382,9.392,20.147,20.147,1052.816,1757.325,10.147,10.147,-9.705,0,0,139.161,139.161,178.322,460.759,460.759,-593.329,349.886,814.109,692.897,838.262,508.924,172.594,632.655,632.655,229.945,229.945,290.729,-60.504,289.495,-410.504,-327.405,211.125,211.125,-226.125,-226.125,6.530,6.530,55.879,-88.874,-88.874,-410.934,-410.934,-130.597,-130.597,105.065,-128.456,-128.456]")

	result := loadflow.LoadFlow2(network, states)

	for i, v := range result.Flows {
		if (1 - expectedFlows[i]/v) > 0.1 {
			t.Errorf("Unexpected flow: %v %v", expectedFlows[i], v)
		}
	}

	for i, v := range result.States {
		if expectedStates[i] != v {
			t.Errorf("Unexpected state")
		}
	}
}
